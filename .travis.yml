language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm update --dev
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_559256423a60_key -iv $encrypted_559256423a60_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: eJc/TFffQcueXzIugUsuGwwquzlmPOMD7zGD1C0m7lbPVxxiItIVCsS77Pylf0B5yLaZkiwyZEoYFyFc0CFWiB0crAUslDP53ZQN6ytu0BYiJffHo2W1nvWg7rSq8LvlKBCH2ZLhT7J2lrTk9JICS6+z8HuLPSNH94cwr1aHt6ElxrBLFKnyVdNxcNBpBKM09diGCkNGK0dFNiODZY69umDASSv4HWt+Zw3OQXfbVFCKe3xfrOA/kJr+rrqdSCo3ze6Jcl8l87WIL5b1FwwIM6E+7e8lut6cZyXyNRK+a8RfhAzQD9vYyvupJNfb9aUoC2D24cnIJtWN7x6s9NOLMO8SY1AlO5uBckXzxiMn4oeCZ5bL15twLLvQ6nkDuRYJPc/JDDiSx4AbpSUOvOt8ZUQbMnkcCM1KM+PURRpIoREpiW3gn0N667Gi+dhUg6O7EgFfotWbvYhkbqJpiF592zd8Uubk8FSnuI5KHhTts4hL8szwtnUnf5PtHe+RDfTsac5eGhuaNAgj2zx7G3wR3g86yfZPi+vnylHeNiU3q4sVmscgGwaUyo9QW2Zv0c492zK/pkZg0aIsLcppglasdrYnNyVz499jrOmOrsvwHUP8f0+/9hciISxHY8E4cYVgniCDnloM3IirxJj7F8gULqZQEtb/BUReL1zPbuAD0eo=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: QzOsubfUPYSHzdgQ/bz1uExSf0HYLry1ADLu49IaErGJNn+ArfaxAr9wRSdXkPHXQghOsXu9nhOKllogl3oFvcaP25yrSr3bBWtxqju6aHxTzR5+TfQOEvFwVPieMsHy+1VBMYBBY+ah+hGDgcPFXB+7uTENCX/N0BR6bTcn8UXVTLi8yNQ7+jULp0Ri2i6LHJ7fNG/TkHyWhhW8OGmJMhV3Ag5VTq/SYNQrv/0fi75rLW2IuPGooEAdCgzyHDSddSalS5d5nJRBChG9Xn/d8HgkaNAFQC/dIoo/Q7qUwrK+Q9v2rA+KUCGoWsBPHRAoM5lUZi60C7WYAuCPQJHGUOL3LeTyRRNAhXu0BADGvEUJ1u5YV7EfAIA3F13Z9yIrOp74EoDOuN2pN/Dm4ArC4lCdx+YY+SuwF4o058SHQacOI0xem0BRLxhrg6Ei6jAyh68cVre5rEdup1pSF0P1rFBNB7Y+sNCMJeMwEuuwx7mE4WXNd0P6FD6RcdRNtf7bSpxgjbiHtqKTLin9cXOH7597fM28EHfxRSoJRZJL+6xHsBm978yoM3aAw5QpkWMNTfFuG1tTPio6T7eUFB7IEsknzD90cdtisyLlb+khXvUk0PLbAuG6EmYP1XVK3IWpWP1YONRG1H51rg23XHrSMmu/A72l7WEqar63gcXM29A=
  - secure: 6De6nrSXcC+b5bCnRR1sMdYy0j/dS1wNu5zmL8rokAkjweOywfRUQnkCJzlQDU9/orujsiU7+wunuNwchDe/VXpjd4aZbJ8MH27VDyTKDgRwNJrjtfol2fK/wawIuIJPFSaJ0fM9i1KRV+sdanA8MP1rCklVnGcM7ytd5DsVZe8zkR/05G5BvQZO4ecb8z0Y/yYI4uxHMwHFTMMizZ63tlxYOCNg1qUx7RpSGiR74AuttS28hRpGsVyrrERKE+1MJOF0HZQeMFdRjgM5cvRzuGRJyy/RIigXySK4b/6B/PAAc1qY/ZXZfxreFrITDfQiSGFtA8Tr9j2iGAucWtg/4Uxb6lK4uDtLOowhkj0UI3svya6ksW1rQS/J6lXu4vluAWAu6ZIvmrJtHH0BbkssLp2BML7cpnQfKSB81IvXCUDZINO6YqMJFgpsPiij0MyMyXkcqeKygIxO9sA7ToS2mAcVkmYQDjgRFRwkpWXwzLLj+bnKMQOusk0LpPNSyyxmVwwPHEfUGVnfcg8Z8TWllr5Veg7un/xJPaB3fOIj0vJGpTDxEEbWUXdEK0t/dQgEHMonu0Pd/RGWRWvRsu4oMvB3b5LkWm+sAlQnJSILIUGXE3t2D0REc6xFL/EPwwbOwdpfxPEroZGACz53CXAl96ct+OjmsuV3jH7rt822LSo=
  - secure: Vb9m9VuUIFx+UUj8HmERLNdnJdE0g5a63x/0Z3marSPFB6bzTGZD5d48bxu4dczZru0unKYl9a2gCR904ixIls1NqqeI1dCACzb6LkOy/6/cEfDMC68vCvmkeI+f29ZYk7RTDHfVqUy2AG7QsmoGs7FX5egP1vGyWWAEgIKupYCh3jG6wiBtukR4uUCtsQWaa2UvQXeurEyPVleD019hIicV7JSXt3wsrFstTeHMxQmRHjUqyByNX6DEfV8ebTLTRmxpmAQZRlo1l5IIJ51V0Q9/ETgd9RZ4FBItGfC/4PBYLdDU77NkF1wqCKOF3rccR5MByR1TaLAv922SbT7nONEqJ7DJXUlM4SreGQcyqcIqbqgiGSgTzyhaC4T/lc/Yp/qDJaN5iMx0wcl40uZz++Wv2AS/Y+TY93l5l+C/SXhiK7qA+UgFeISedntkGM5hdHGXEttbNsh9Ki1DvWDifgQu7OtFvHHZH66Km7NM3yBXbGHrrG3jqk4OVhrS34OpGxEMo9WElhM9jfJLnmRPpLeu2sDWA3/2amVom6JXKAnGnSGXUaaRc+ac5crHRIgYaHAwz+dFOPh5NTeZonx49c0V635IDz+Yy7umyjo7fD+XPg5HMJ5cs71GqlEJWf+Y6TlyjbCjrgDTsBv3YSYDbB8ASyvPy9Fdo2xDvFoatsE=
